{"ast":null,"code":"var _jsxFileName = \"/Users/cmariot/Desktop/Dighacktion/frontend/frontend/src/Conversation.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Conversation = ({\n  messages\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.isUser ? \"user\" : \"bot\"}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = Conversation;\nexport default Conversation;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Conversation","messages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","message","index","isUser","text","_c","$RefreshReg$"],"sources":["/Users/cmariot/Desktop/Dighacktion/frontend/frontend/src/Conversation.jsx"],"sourcesContent":["\nimport React from \"react\";\n\nconst Conversation = ({ messages }) => {\n  return (\n    <div className=\"conversation\">\n      <h2>Conversation</h2>\n      <div className=\"conversation-messages\">\n        {messages.map((message, index) => (\n          <div\n            key={index}\n            className={`message ${message.isUser ? \"user\" : \"bot\"}`}\n          >\n            {message.text}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Conversation;\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACrC,oBACEF,OAAA;IAAKG,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BJ,OAAA;MAAAI,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBR,OAAA;MAAKG,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EACnCF,QAAQ,CAACO,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3BX,OAAA;QAEEG,SAAS,EAAG,WAAUO,OAAO,CAACE,MAAM,GAAG,MAAM,GAAG,KAAM,EAAE;QAAAR,QAAA,EAEvDM,OAAO,CAACG;MAAI,GAHRF,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACM,EAAA,GAhBIb,YAAY;AAkBlB,eAAeA,YAAY;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}