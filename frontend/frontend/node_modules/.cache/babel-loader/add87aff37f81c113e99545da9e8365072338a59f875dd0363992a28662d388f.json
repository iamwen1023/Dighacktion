{"ast":null,"code":"var _jsxFileName = \"/Users/cmariot/Desktop/Dighacktion/frontend/frontend/src/Chatbox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport History from \"./History\";\nimport Conversation from \"./Conversation\";\nimport logo from \"./CrossDoc-logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [currentMessageIndex, setCurrentMessageIndex] = useState(null);\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    setMessages([...messages, {\n      text: input,\n      isUser: true\n    }]);\n    simulateBotResponse(input);\n    setInput(\"\");\n  };\n  const simulateBotResponse = userMessage => {\n    const botMessage = `Hi there! You said: \"${userMessage}\"`;\n    setMessages([...messages, {\n      text: botMessage,\n      isUser: false\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(History, {\n      messages: messages,\n      setCurrentMessageIndex: setCurrentMessageIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Conversation, {\n      messages: currentMessageIndex !== null ? messages.slice(0, currentMessageIndex + 1) : messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"Logo\",\n      className: \"logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: handleInputChange,\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"exlPFxAvhVa2KK77kM+i0emc2aU=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","History","Conversation","logo","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","currentMessageIndex","setCurrentMessageIndex","handleInputChange","e","target","value","handleSubmit","preventDefault","trim","text","isUser","simulateBotResponse","userMessage","botMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","src","alt","onSubmit","type","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/cmariot/Desktop/Dighacktion/frontend/frontend/src/Chatbox.jsx"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport History from \"./History\";\nimport Conversation from \"./Conversation\";\nimport logo from \"./CrossDoc-logo.svg\";\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [currentMessageIndex, setCurrentMessageIndex] = useState(null);\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    setMessages([...messages, { text: input, isUser: true }]);\n    simulateBotResponse(input);\n    setInput(\"\");\n  };\n\n  const simulateBotResponse = (userMessage) => {\n    const botMessage = `Hi there! You said: \"${userMessage}\"`;\n    setMessages([...messages, { text: botMessage, isUser: false }]);\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <History\n        messages={messages}\n        setCurrentMessageIndex={setCurrentMessageIndex}\n      />\n      <Conversation\n        messages={currentMessageIndex !== null ? messages.slice(0, currentMessageIndex + 1) : messages}\n      />\n       <img src={logo} alt=\"Logo\" className=\"logo\" />\n      <form onSubmit={handleSubmit} className=\"input-form\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={handleInputChange}\n          placeholder=\"Type a message...\"\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}