{"ast":null,"code":"var _jsxFileName = \"/mnt/nfs/homes/wlo/chatbot/frontend/frontend/src/Chatbox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport History from \"./History\";\nimport Conversation from \"./Conversation\";\nimport logo from \"./CrossDoc-logo.svg\";\n\n// Function to get the CSRF token from the cookie\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n    const cookies = document.cookie.split(';');\n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i].trim();\n      // Does this cookie string begin with the name we want?\n      if (cookie.substring(0, name.length + 1) === name + '=') {\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n        break;\n      }\n    }\n  }\n  return cookieValue;\n}\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [currentMessageIndex, setCurrentMessageIndex] = useState(null);\n  const handleInputChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    setMessages([...messages, {\n      text: input,\n      isUser: true\n    }]);\n    // Send the user message to the server on localhost:8000/send with axios\n    fetch(\"http://localhost:8000/send/\", {\n      method: \"POST\",\n      credentials: 'include',\n      body: JSON.stringify({\n        message: input\n      }),\n      headers: {\n        'X-CSRFToken': getCookie('csrftoken') // Make sure to define getCookie() function\n      }\n    }).then(response => response.text()).then(text => {\n      setMessages([...messages, {\n        text: text,\n        isUser: false\n      }]);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n\n    // simulateBotResponse(input);\n  };\n  const simulateBotResponse = userMessage => {\n    const botMessage = `Hi there! You said: \"${userMessage}\"`;\n    setMessages([...messages, {\n      text: botMessage,\n      isUser: false\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(History, {\n      messages: messages,\n      setCurrentMessageIndex: setCurrentMessageIndex\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container_right\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"conversation\",\n        children: /*#__PURE__*/_jsxDEV(Conversation, {\n          messages: currentMessageIndex !== null ? messages.slice(0, currentMessageIndex + 1) : messages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        class: \"input-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: handleInputChange,\n          placeholder: \"Type a message...\",\n          class: \"input-field\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            viewBox: \"0 0 24 24\",\n            fill: \"currentColor\",\n            \"aria-hidden\": \"true\",\n            class: \"h-5 w-5\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M3.478 2.405a.75.75 0 00-.926.94l2.432 7.905H13.5a.75.75 0 010 1.5H4.984l-2.432 7.905a.75.75 0 00.926.94 60.519 60.519 0 0018.445-8.986.75.75 0 000-1.218A60.517 60.517 0 003.478 2.405z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 124\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"Logo\",\n        class: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"exlPFxAvhVa2KK77kM+i0emc2aU=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","History","Conversation","logo","jsxDEV","_jsxDEV","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","Chatbot","_s","messages","setMessages","input","setInput","currentMessageIndex","setCurrentMessageIndex","handleInputChange","e","target","value","handleSubmit","preventDefault","text","isUser","fetch","method","credentials","body","JSON","stringify","message","headers","then","response","catch","error","console","simulateBotResponse","userMessage","botMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","class","slice","onSubmit","type","onChange","placeholder","xmlns","viewBox","fill","d","src","alt","_c","$RefreshReg$"],"sources":["/mnt/nfs/homes/wlo/chatbot/frontend/frontend/src/Chatbox.jsx"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport History from \"./History\";\nimport Conversation from \"./Conversation\";\nimport logo from \"./CrossDoc-logo.svg\";\n\n\n// Function to get the CSRF token from the cookie\nfunction getCookie(name) {\n    let cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        const cookies = document.cookie.split(';');\n        for (let i = 0; i < cookies.length; i++) {\n            const cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\n\nconst Chatbot = () => {\n    const [messages, setMessages] = useState([]);\n    const [input, setInput] = useState(\"\");\n    const [currentMessageIndex, setCurrentMessageIndex] = useState(null);\n\n    const handleInputChange = (e) => {\n        setInput(e.target.value);\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (!input.trim()) return;\n        setMessages([...messages, { text: input, isUser: true }]);\n        // Send the user message to the server on localhost:8000/send with axios\n        fetch(\"http://localhost:8000/send/\", {\n            method: \"POST\",\n            credentials: 'include',\n            body: JSON.stringify({ message: input }),\n            headers: {\n                'X-CSRFToken': getCookie('csrftoken')  // Make sure to define getCookie() function\n\n            }\n        })\n        .then((response) => response.text())\n        .then((text) => {\n            setMessages([...messages, { text: text, isUser: false }]);\n        })\n        .catch((error) => {\n          console.error(\"Error:\", error);\n        });\n\n    // simulateBotResponse(input);\n  };\n\n  const simulateBotResponse = (userMessage) => {\n    const botMessage = `Hi there! You said: \"${userMessage}\"`;\n    setMessages([...messages, { text: botMessage, isUser: false }]);\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <History\n        messages={messages}\n        setCurrentMessageIndex={setCurrentMessageIndex}\n      />\n    <div class=\"container_right\">\n      <div class=\"conversation\">\n    <Conversation\n      messages={currentMessageIndex !== null ? messages.slice(0, currentMessageIndex + 1) : messages}\n    />\n  </div>\n  <form onSubmit={handleSubmit} class=\"input-form\">\n    <input\n      type=\"text\"\n      value={input}\n      onChange={handleInputChange}\n      placeholder=\"Type a message...\"\n      class=\"input-field\"\n    />\n\n    <button type=\"submit\" className=\"send-button\" >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" aria-hidden=\"true\" class=\"h-5 w-5\"><path d=\"M3.478 2.405a.75.75 0 00-.926.94l2.432 7.905H13.5a.75.75 0 010 1.5H4.984l-2.432 7.905a.75.75 0 00.926.94 60.519 60.519 0 0018.445-8.986.75.75 0 000-1.218A60.517 60.517 0 003.478 2.405z\"></path></svg>\n    </button>\n  </form>\n  <img src={logo} alt=\"Logo\" class=\"logo\" />\n</div>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,IAAI,MAAM,qBAAqB;;AAGtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,SAASA,CAACC,IAAI,EAAE;EACrB,IAAIC,WAAW,GAAG,IAAI;EACtB,IAAIC,QAAQ,CAACC,MAAM,IAAID,QAAQ,CAACC,MAAM,KAAK,EAAE,EAAE;IAC3C,MAAMC,OAAO,GAAGF,QAAQ,CAACC,MAAM,CAACE,KAAK,CAAC,GAAG,CAAC;IAC1C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,OAAO,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;MACrC,MAAMH,MAAM,GAAGC,OAAO,CAACE,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAChC;MACA,IAAIL,MAAM,CAACM,SAAS,CAAC,CAAC,EAAET,IAAI,CAACO,MAAM,GAAG,CAAC,CAAC,KAAMP,IAAI,GAAG,GAAI,EAAE;QACvDC,WAAW,GAAGS,kBAAkB,CAACP,MAAM,CAACM,SAAS,CAACT,IAAI,CAACO,MAAM,GAAG,CAAC,CAAC,CAAC;QACnE;MACJ;IACJ;EACJ;EACA,OAAON,WAAW;AACtB;AAGA,MAAMU,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAEpE,MAAM0B,iBAAiB,GAAIC,CAAC,IAAK;IAC7BJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAIH,CAAC,IAAK;IACxBA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI,CAACT,KAAK,CAACP,IAAI,CAAC,CAAC,EAAE;IACnBM,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEY,IAAI,EAAEV,KAAK;MAAEW,MAAM,EAAE;IAAK,CAAC,CAAC,CAAC;IACzD;IACAC,KAAK,CAAC,6BAA6B,EAAE;MACjCC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,SAAS;MACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,OAAO,EAAElB;MAAM,CAAC,CAAC;MACxCmB,OAAO,EAAE;QACL,aAAa,EAAEnC,SAAS,CAAC,WAAW,CAAC,CAAE;MAE3C;IACJ,CAAC,CAAC,CACDoC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACX,IAAI,CAAC,CAAC,CAAC,CACnCU,IAAI,CAAEV,IAAI,IAAK;MACZX,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEY,IAAI,EAAEA,IAAI;QAAEC,MAAM,EAAE;MAAM,CAAC,CAAC,CAAC;IAC7D,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC,CAAC,CAAC;;IAEN;EACF,CAAC;EAED,MAAME,mBAAmB,GAAIC,WAAW,IAAK;IAC3C,MAAMC,UAAU,GAAI,wBAAuBD,WAAY,GAAE;IACzD3B,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;MAAEY,IAAI,EAAEiB,UAAU;MAAEhB,MAAM,EAAE;IAAM,CAAC,CAAC,CAAC;EACjE,CAAC;EAED,oBACE5B,OAAA;IAAK6C,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChC9C,OAAA,CAACJ,OAAO;MACNmB,QAAQ,EAAEA,QAAS;MACnBK,sBAAsB,EAAEA;IAAuB;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACJlD,OAAA;MAAKmD,KAAK,EAAC,iBAAiB;MAAAL,QAAA,gBAC1B9C,OAAA;QAAKmD,KAAK,EAAC,cAAc;QAAAL,QAAA,eAC3B9C,OAAA,CAACH,YAAY;UACXkB,QAAQ,EAAEI,mBAAmB,KAAK,IAAI,GAAGJ,QAAQ,CAACqC,KAAK,CAAC,CAAC,EAAEjC,mBAAmB,GAAG,CAAC,CAAC,GAAGJ;QAAS;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNlD,OAAA;QAAMqD,QAAQ,EAAE5B,YAAa;QAAC0B,KAAK,EAAC,YAAY;QAAAL,QAAA,gBAC9C9C,OAAA;UACEsD,IAAI,EAAC,MAAM;UACX9B,KAAK,EAAEP,KAAM;UACbsC,QAAQ,EAAElC,iBAAkB;UAC5BmC,WAAW,EAAC,mBAAmB;UAC/BL,KAAK,EAAC;QAAa;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,eAEFlD,OAAA;UAAQsD,IAAI,EAAC,QAAQ;UAACT,SAAS,EAAC,aAAa;UAAAC,QAAA,eACzC9C,OAAA;YAAKyD,KAAK,EAAC,4BAA4B;YAACC,OAAO,EAAC,WAAW;YAACC,IAAI,EAAC,cAAc;YAAC,eAAY,MAAM;YAACR,KAAK,EAAC,SAAS;YAAAL,QAAA,eAAC9C,OAAA;cAAM4D,CAAC,EAAC;YAA0L;cAAAb,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/T,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACPlD,OAAA;QAAK6D,GAAG,EAAE/D,IAAK;QAACgE,GAAG,EAAC,MAAM;QAACX,KAAK,EAAC;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEV,CAAC;AAACpC,EAAA,CApEID,OAAO;AAAAkD,EAAA,GAAPlD,OAAO;AAsEb,eAAeA,OAAO;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}