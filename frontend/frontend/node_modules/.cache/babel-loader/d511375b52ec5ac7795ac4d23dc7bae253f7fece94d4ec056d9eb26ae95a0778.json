{"ast":null,"code":"import React,{useState}from\"react\";import History from\"./History\";import Conversation from\"./Conversation\";import logo from\"./CrossDoc-logo.svg\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chatbot=()=>{const[messages,setMessages]=useState([]);const[input,setInput]=useState(\"\");const[currentMessageIndex,setCurrentMessageIndex]=useState(null);const handleInputChange=e=>{setInput(e.target.value);};const handleSubmit=e=>{e.preventDefault();if(!input.trim())return;setMessages([...messages,{text:input,isUser:true}]);simulateBotResponse(input);setInput(\"\");};const simulateBotResponse=userMessage=>{const botMessage=\"Hi there! You said: \\\"\".concat(userMessage,\"\\\"\");setMessages([...messages,{text:botMessage,isUser:false}]);};return/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-container\",children:[/*#__PURE__*/_jsx(History,{messages:messages,setCurrentMessageIndex:setCurrentMessageIndex}),/*#__PURE__*/_jsx(Conversation,{messages:currentMessageIndex!==null?messages.slice(0,currentMessageIndex+1):messages}),/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"Logo\",className:\"logo\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"input-form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:handleInputChange,placeholder:\"Type a message...\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Send\"})]})]});};export default Chatbot;","map":{"version":3,"names":["React","useState","History","Conversation","logo","jsx","_jsx","jsxs","_jsxs","Chatbot","messages","setMessages","input","setInput","currentMessageIndex","setCurrentMessageIndex","handleInputChange","e","target","value","handleSubmit","preventDefault","trim","text","isUser","simulateBotResponse","userMessage","botMessage","concat","className","children","slice","src","alt","onSubmit","type","onChange","placeholder"],"sources":["/Users/cmariot/Desktop/Dighacktion/frontend/frontend/src/Chatbox.jsx"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport History from \"./History\";\nimport Conversation from \"./Conversation\";\nimport logo from \"./CrossDoc-logo.svg\";\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [currentMessageIndex, setCurrentMessageIndex] = useState(null);\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    setMessages([...messages, { text: input, isUser: true }]);\n    simulateBotResponse(input);\n    setInput(\"\");\n  };\n\n  const simulateBotResponse = (userMessage) => {\n    const botMessage = `Hi there! You said: \"${userMessage}\"`;\n    setMessages([...messages, { text: botMessage, isUser: false }]);\n  };\n\n  return (\n    <div className=\"chatbot-container\">\n      <History\n        messages={messages}\n        setCurrentMessageIndex={setCurrentMessageIndex}\n      />\n      <Conversation\n        messages={currentMessageIndex !== null ? messages.slice(0, currentMessageIndex + 1) : messages}\n      />\n       <img src={logo} alt=\"Logo\" className=\"logo\" />\n      <form onSubmit={handleSubmit} className=\"input-form\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={handleInputChange}\n          placeholder=\"Type a message...\"\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":"AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,OAAO,KAAM,WAAW,CAC/B,MAAO,CAAAC,YAAY,KAAM,gBAAgB,CACzC,MAAO,CAAAC,IAAI,KAAM,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvC,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACa,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAEpE,KAAM,CAAAe,iBAAiB,CAAIC,CAAC,EAAK,CAC/BJ,QAAQ,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAC1B,CAAC,CAED,KAAM,CAAAC,YAAY,CAAIH,CAAC,EAAK,CAC1BA,CAAC,CAACI,cAAc,CAAC,CAAC,CAClB,GAAI,CAACT,KAAK,CAACU,IAAI,CAAC,CAAC,CAAE,OACnBX,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAE,CAAEa,IAAI,CAAEX,KAAK,CAAEY,MAAM,CAAE,IAAK,CAAC,CAAC,CAAC,CACzDC,mBAAmB,CAACb,KAAK,CAAC,CAC1BC,QAAQ,CAAC,EAAE,CAAC,CACd,CAAC,CAED,KAAM,CAAAY,mBAAmB,CAAIC,WAAW,EAAK,CAC3C,KAAM,CAAAC,UAAU,0BAAAC,MAAA,CAA2BF,WAAW,MAAG,CACzDf,WAAW,CAAC,CAAC,GAAGD,QAAQ,CAAE,CAAEa,IAAI,CAAEI,UAAU,CAAEH,MAAM,CAAE,KAAM,CAAC,CAAC,CAAC,CACjE,CAAC,CAED,mBACEhB,KAAA,QAAKqB,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCxB,IAAA,CAACJ,OAAO,EACNQ,QAAQ,CAAEA,QAAS,CACnBK,sBAAsB,CAAEA,sBAAuB,CAChD,CAAC,cACFT,IAAA,CAACH,YAAY,EACXO,QAAQ,CAAEI,mBAAmB,GAAK,IAAI,CAAGJ,QAAQ,CAACqB,KAAK,CAAC,CAAC,CAAEjB,mBAAmB,CAAG,CAAC,CAAC,CAAGJ,QAAS,CAChG,CAAC,cACDJ,IAAA,QAAK0B,GAAG,CAAE5B,IAAK,CAAC6B,GAAG,CAAC,MAAM,CAACJ,SAAS,CAAC,MAAM,CAAE,CAAC,cAC/CrB,KAAA,SAAM0B,QAAQ,CAAEd,YAAa,CAACS,SAAS,CAAC,YAAY,CAAAC,QAAA,eAClDxB,IAAA,UACE6B,IAAI,CAAC,MAAM,CACXhB,KAAK,CAAEP,KAAM,CACbwB,QAAQ,CAAEpB,iBAAkB,CAC5BqB,WAAW,CAAC,mBAAmB,CAChC,CAAC,cACF/B,IAAA,WAAQ6B,IAAI,CAAC,QAAQ,CAAAL,QAAA,CAAC,MAAI,CAAQ,CAAC,EAC/B,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAArB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}